{% extends "base.html.twig" %}

{% block body %}
    <div class="ui fluid container">
        <div class="ui one column doubling stackable centered grid">
            <div class="four wide column">
                <h3 class="ui  inverted top attached header">
                    <i class="large server icon"></i> {{ os.name }}
                </h3>
                <div class="ui attached segment">
                    <div class="ui list">
                        <a class="item">
                            <div class="ui progress" data-value="150" data-total="300" id="example6">
                                <div class="bar">
                                    <div class="progress"></div>
                                </div>
                                <div class="label">Carga de archivos</div>
                            </div>
                        </a>
                        <a class="item">
                            <i class="code icon"></i>
                            <div class="content">
                                <div class="header">PHP {{ os.phpversion }}</div>
                                <div class="description">Originally created by Rasmus Lerdorf in 1994</div>
                            </div>
                        </a>
                        <a class="item">
                            <i class="right triangle icon"></i>
                            <div class="content">
                                <div class="header">Zend {{ os.zendversion }}</div>
                                <div class="description">Zend Framework (ZF) is an open source, object-oriented web application framework implemented in PHP 5.</div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
            <div class="three wide column">
                <h3 class="ui  inverted top attached header">
                    <i class="large heartbeat icon"></i> Kernel
                </h3>
                <div class="ui attached segment">
                    <table class="ui single line green table">
                        <thead>
                        <tr>
                            <th>Installed Image(s)</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for kernel in kernels %}
                        <tr>
                            <td>{{ kernel }}</td>
                        </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="five wide column">
                <h3 class="ui  inverted top attached header">
                    <i class="large archive icon"></i> DPKG
                </h3>
                <div class="ui attached segment">
                    <table class="ui celled blue table">
                        <thead>
                        <tr>
                            <th>{{ version.dpkg.0 }}</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for log in logs.2 %}
                            <tr>
                                <td>{{ log }}</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="ui three column doubling stackable grid">
            <div class="column">
                <h3 class="ui  inverted top attached header">
                    <i class="large users icon"></i> Users & Groups
                </h3>
                <div class="ui attached segment">
                    <canvas id="UsersGroups"  height="200px"></canvas>
                </div>
            </div>
            <div class="column">
                <h3 class="ui  inverted top attached header">
                    <i class="large chart pie icon"></i> Services
                </h3>
                <div class="ui attached segment">
                    <canvas id="Services"  height="200px"></canvas>
                </div>
            </div>
            <div class="column">
                <h3 class="ui  inverted top attached header">
                    <i class="large file code icon"></i> Binary Files
                </h3>
                <div class="ui attached segment">
                    <canvas id="Bin"  height="200px"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="ui three column doubling stackable centered grid">
        <div class="six wide column">
            <h3 class="ui  inverted top attached header">
                <i class="large shield icon"></i> GUFW - Graphical Uncomplicated Firewall
            </h3>
            <div class="ui attached segment">
                <table class="ui single line red table">
                    <thead>
                    <tr>
                        <th>{{ version.ufw.0 }}</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for log in logs.1 %}
                        <tr>
                            <td>{{ log }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
        <div class="six wide column">
            <h3 class="ui  inverted top attached header">
                <i class="large shield icon"></i> UFW - Uncomplicated Firewall
            </h3>
            <div class="ui attached segment">
            <table class="ui red celled table">
                <thead>
                <tr>
                    <th>Last 5 entries of /var/log/ufw.Log</th>
                </tr>
                </thead>
                <tbody>
                {% for log in logs.0 %}
                    <tr>
                        <td>{{ log }}</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script>
        var ctx = document.getElementById("UsersGroups").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["Users", "Groups"],
                datasets: [{
                    label: 'registered',
                    data: [{{ TotalUsers }}, {{ TotalGroups }}],
                    backgroundColor: [
                        'rgba(0, 181, 173, 0.2)',
                        'rgba(251, 189, 8, 0.2)'

                    ],
                    borderColor: [
                        'rgba(0, 181, 173, 1)',
                        'rgba(251, 189, 8, 1)'

                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
        var ctx2 = document.getElementById("Services").getContext('2d');
        var services = new Chart(ctx2, {
            type: 'doughnut',
            data: {
                labels: ["{{ servicesActive }} Running", "{{ servicesDisabled }} Disabled"],
                datasets: [{
                    label: 'registered',
                    data: [{{ servicesActive }}, {{ servicesDisabled }}],
                    backgroundColor: [
                        'rgba(0, 181, 173, 0.2)',
                        'rgba(251, 189, 8, 0.2)'

                    ],
                    borderColor: [
                        'rgba(0, 181, 173, 1)',
                        'rgba(251, 189, 8, 1)'

                    ],
                    borderWidth: 1
                }]
            }
        });

        var ctx3 = document.getElementById("Bin").getContext('2d');
        var Bin = new Chart(ctx3, {
            type: 'doughnut',
            data: {
                labels: ["/usr/local/sbin/", "/usr/local/bin/", "/usr/bin/", "/usr/sbin/", "/sbin/", "/bin/"],
                datasets: [{
                    data: [{{ binary.0 }}, {{ binary.1 }}, {{ binary.2 }}, {{ binary.3 }}, {{ binary.4 }}, {{ binary.5 }}],
                    backgroundColor: [
                        'rgba(100, 53, 201, 0.2)',
                        'rgba(219, 40, 40, 0.2)',
                        'rgba(0, 181, 173, 0.2)',
                        'rgba(251, 189, 8, 0.2)',
                        'rgba(242, 113, 28, 0.2)',
                        'rgba(165, 103, 63, 0.2)'


                    ],
                    borderColor: [
                        'rgba(100, 53, 201, 1)',
                        'rgba(219, 40, 40, 1)',
                        'rgba(0, 181, 173, 1)',
                        'rgba(251, 189, 8, 1)',
                        'rgba(242, 113, 28, 1)',
                        'rgba(165, 103, 63, 1)'

                    ],
                    borderWidth: 1
                }]
            }
        });
        $('#example6')
            .progress({
                label: 'ratio',
                text: {
                    ratio: '{value} de {total}'
                }
            })
        ;
    </script>

{% endblock %}